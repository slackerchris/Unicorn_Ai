#!/bin/bash
# Auto-detect and configure ComfyUI model paths
# This script makes the setup portable across machines

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
COMFYUI_DIR="$SCRIPT_DIR/comfyui"
CONFIG_FILE="$COMFYUI_DIR/extra_model_paths.yaml"
EXAMPLE_FILE="$COMFYUI_DIR/extra_model_paths.yaml.example"

# Colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
NC='\033[0m'

echo -e "${CYAN}üîç Detecting ComfyUI models location...${NC}"
echo ""

# Try to auto-detect existing ComfyUI installations
DETECTED_PATHS=()

# Check common locations
if [ -d "$HOME/.local/share/ComfyUI/models" ] || [ -d "$HOME/.local/share/ComfyUI/checkpoints" ]; then
    DETECTED_PATHS+=("$HOME/.local/share/ComfyUI")
    echo -e "${GREEN}‚úÖ Found: $HOME/.local/share/ComfyUI${NC}"
fi

if [ -d "$HOME/ComfyUI/models" ]; then
    DETECTED_PATHS+=("$HOME/ComfyUI")
    echo -e "${GREEN}‚úÖ Found: $HOME/ComfyUI${NC}"
fi

if [ -d "$HOME/ai-models/comfyui" ]; then
    DETECTED_PATHS+=("$HOME/ai-models/comfyui")
    echo -e "${GREEN}‚úÖ Found: $HOME/ai-models/comfyui${NC}"
fi

if [ -d "/opt/ai-models/comfyui" ]; then
    DETECTED_PATHS+=("/opt/ai-models/comfyui")
    echo -e "${GREEN}‚úÖ Found: /opt/ai-models/comfyui${NC}"
fi

echo ""

# Determine which path to use
MODELS_PATH=""

if [ ${#DETECTED_PATHS[@]} -eq 0 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  No existing ComfyUI installation detected${NC}"
    echo ""
    echo "Where would you like to store models?"
    echo "  1. $HOME/.local/share/ComfyUI (recommended)"
    echo "  2. $HOME/ai-models/comfyui"
    echo "  3. Custom path"
    echo ""
    read -p "Choose [1-3]: " choice
    
    case $choice in
        1)
            MODELS_PATH="$HOME/.local/share/ComfyUI"
            ;;
        2)
            MODELS_PATH="$HOME/ai-models/comfyui"
            ;;
        3)
            read -p "Enter custom path: " custom_path
            MODELS_PATH="${custom_path/#\~/$HOME}"
            ;;
        *)
            MODELS_PATH="$HOME/.local/share/ComfyUI"
            ;;
    esac
    
    echo -e "${CYAN}üìÅ Creating directory structure...${NC}"
    mkdir -p "$MODELS_PATH"/{checkpoints,vae,loras,embeddings,controlnet,clip,clip_vision}
    echo -e "${GREEN}‚úÖ Created: $MODELS_PATH${NC}"
    
elif [ ${#DETECTED_PATHS[@]} -eq 1 ]; then
    MODELS_PATH="${DETECTED_PATHS[0]}"
    echo -e "${GREEN}‚úÖ Using detected path: $MODELS_PATH${NC}"
    
    # Check if models exist
    MODEL_COUNT=$(find "$MODELS_PATH" -name "*.safetensors" -o -name "*.ckpt" 2>/dev/null | wc -l)
    if [ $MODEL_COUNT -gt 0 ]; then
        MODEL_SIZE=$(du -sh "$MODELS_PATH" 2>/dev/null | cut -f1)
        echo -e "${GREEN}   Found $MODEL_COUNT model files ($MODEL_SIZE)${NC}"
    fi
    
else
    echo -e "${YELLOW}Multiple ComfyUI installations found:${NC}"
    for i in "${!DETECTED_PATHS[@]}"; do
        SIZE=$(du -sh "${DETECTED_PATHS[$i]}" 2>/dev/null | cut -f1 || echo "unknown")
        echo "  $((i+1)). ${DETECTED_PATHS[$i]} ($SIZE)"
    done
    echo ""
    read -p "Choose which to use [1-${#DETECTED_PATHS[@]}]: " choice
    
    if [[ "$choice" =~ ^[0-9]+$ ]] && [ "$choice" -ge 1 ] && [ "$choice" -le "${#DETECTED_PATHS[@]}" ]; then
        MODELS_PATH="${DETECTED_PATHS[$((choice-1))]}"
    else
        MODELS_PATH="${DETECTED_PATHS[0]}"
    fi
    
    echo -e "${GREEN}‚úÖ Using: $MODELS_PATH${NC}"
fi

echo ""
echo -e "${CYAN}üìù Generating configuration file...${NC}"

# Create the config file
cat > "$CONFIG_FILE" << EOF
# ComfyUI External Model Paths Configuration
# Auto-generated by detect_models.sh
# This file is machine-specific and excluded from git

system_comfyui:
    base_path: $MODELS_PATH/
    
    checkpoints: checkpoints/
    vae: vae/
    loras: loras/
    embeddings: embeddings/
    hypernetworks: hypernetworks/
    upscale_models: upscale_models/
    controlnet: controlnet/
    clip: clip/
    clip_vision: clip_vision/
    style_models: style_models/
    text_encoders: text_encoders/
    unet: unet/
    diffusion_models: diffusion_models/
    animatediff: animatediff/
    video_models: video_models/
EOF

echo -e "${GREEN}‚úÖ Configuration written to: $CONFIG_FILE${NC}"
echo ""

# Update .gitignore to exclude the machine-specific config
if ! grep -q "extra_model_paths.yaml" "$COMFYUI_DIR/.gitignore" 2>/dev/null; then
    echo "# Machine-specific model paths (auto-generated)" >> "$COMFYUI_DIR/.gitignore"
    echo "extra_model_paths.yaml" >> "$COMFYUI_DIR/.gitignore"
    echo -e "${GREEN}‚úÖ Added extra_model_paths.yaml to .gitignore${NC}"
fi

echo ""
echo -e "${GREEN}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
echo -e "${GREEN}‚ïë     ‚úÖ Configuration Complete! ‚úÖ      ‚ïë${NC}"
echo -e "${GREEN}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
echo ""
echo -e "${CYAN}üìç Models location: ${YELLOW}$MODELS_PATH${NC}"
echo -e "${CYAN}üìÑ Config file: ${YELLOW}$CONFIG_FILE${NC}"
echo ""

# Show what's available
if [ -d "$MODELS_PATH/checkpoints" ]; then
    CHECKPOINT_COUNT=$(ls -1 "$MODELS_PATH/checkpoints"/*.safetensors 2>/dev/null | wc -l)
    if [ $CHECKPOINT_COUNT -gt 0 ]; then
        echo -e "${CYAN}üé® Available models:${NC}"
        ls -1h "$MODELS_PATH/checkpoints"/*.safetensors 2>/dev/null | while read file; do
            SIZE=$(du -h "$file" | cut -f1)
            NAME=$(basename "$file")
            echo "   ‚Ä¢ $NAME ($SIZE)"
        done
        echo ""
        echo -e "${GREEN}‚úÖ Ready to use! Start with: bash start_all.sh${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  No models found in checkpoints/${NC}"
        echo -e "${CYAN}   Download models with: bash download_models.sh${NC}"
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è  Checkpoints directory not found${NC}"
    echo -e "${CYAN}   Download models with: bash download_models.sh${NC}"
fi

echo ""
echo -e "${CYAN}üí° Tip: On a new machine, just run this script again!${NC}"
